/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.clinic.plp_clinicmanage.ui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import com.clinic.plp_clinicmanage.utils.Auth;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class MainScreen extends javax.swing.JFrame implements ActionListener {

    private JPanel chilPanel;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
        this.btn_List_Staff.addActionListener(this);
        this.btn_List_Doctor.addActionListener(this);
        this.btn_List_Patients.addActionListener(this);
        this.btn_List_Medicine.addActionListener(this);
        this.btn_AddNew_Pointment.addActionListener(this);
        this.menuChangePassword.addActionListener(this);
        this.menuSignOut.addActionListener(this);
        this.menuStaff.addActionListener(this);
        this.menuDoctor.addActionListener(this);
        this.menuPatient.addActionListener(this);
        this.menuMedicine.addActionListener(this);
        this.menuStatitic.addActionListener(this);
        this.menuHelp.addActionListener(this);
        this.menuExit.addActionListener(this);
        edtUserName.setText(Auth.user.getTenND());
        int role = Auth.user.getVaiTro();
        if (role == 0) {
            rbGĐ.setSelected(true);
        } else if (role == 1) {
            rbNV.setSelected(true);
        } else if (role == 2) {
            rbBS.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtUserName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rbGĐ = new javax.swing.JRadioButton();
        rbNV = new javax.swing.JRadioButton();
        rbBS = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        btn_List_Staff = new javax.swing.JButton();
        btn_List_Doctor = new javax.swing.JButton();
        btn_List_Patients = new javax.swing.JButton();
        btn_List_Medicine = new javax.swing.JButton();
        btn_AddNew_Pointment = new javax.swing.JButton();
        panelMainSpace = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuChangePassword = new javax.swing.JMenuItem();
        menuSignOut = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuStaff = new javax.swing.JMenuItem();
        menuDoctor = new javax.swing.JMenuItem();
        menuPatient = new javax.swing.JMenuItem();
        menuMedicine = new javax.swing.JMenuItem();
        menuStatitic = new javax.swing.JMenu();
        menuHelp = new javax.swing.JMenu();
        menuExit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tên người dùng:");

        edtUserName.setEditable(false);
        edtUserName.setBackground(new java.awt.Color(0, 102, 102));
        edtUserName.setForeground(new java.awt.Color(255, 255, 255));
        edtUserName.setText("Tiểu Phụng");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Vai trò:");

        rbGĐ.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(rbGĐ);
        rbGĐ.setForeground(new java.awt.Color(255, 255, 255));
        rbGĐ.setText("Giám đốc");
        rbGĐ.setEnabled(false);

        rbNV.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(rbNV);
        rbNV.setForeground(new java.awt.Color(255, 255, 255));
        rbNV.setSelected(true);
        rbNV.setText("Nhân viên");
        rbNV.setEnabled(false);
        rbNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNVActionPerformed(evt);
            }
        });

        rbBS.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(rbBS);
        rbBS.setForeground(new java.awt.Color(255, 255, 255));
        rbBS.setText("Bác sĩ");
        rbBS.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edtUserName)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(rbGĐ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbBS, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 51, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbGĐ)
                    .addComponent(rbNV)
                    .addComponent(rbBS))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_image/LogoPHP.png"))); // NOI18N

        btn_List_Staff.setBackground(new java.awt.Color(204, 204, 204));
        btn_List_Staff.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_List_Staff.setText("Danh sách nhân viên");

        btn_List_Doctor.setBackground(new java.awt.Color(204, 204, 204));
        btn_List_Doctor.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_List_Doctor.setText("Danh sách bác sĩ");

        btn_List_Patients.setBackground(new java.awt.Color(204, 204, 204));
        btn_List_Patients.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_List_Patients.setText("Danh sách bệnh nhân");
        btn_List_Patients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_List_PatientsActionPerformed(evt);
            }
        });

        btn_List_Medicine.setBackground(new java.awt.Color(204, 204, 204));
        btn_List_Medicine.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_List_Medicine.setText("Danh sách thuốc");

        btn_AddNew_Pointment.setBackground(new java.awt.Color(204, 204, 204));
        btn_AddNew_Pointment.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_AddNew_Pointment.setText("Thêm mới toa thuốc");
        btn_AddNew_Pointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddNew_PointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_List_Staff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_List_Doctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_List_Patients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_List_Medicine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_AddNew_Pointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_List_Staff)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_List_Doctor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_List_Patients)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_List_Medicine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_AddNew_Pointment)
                .addContainerGap(652, Short.MAX_VALUE))
        );

        panelMainSpace.setLayout(new java.awt.BorderLayout());

        jMenu1.setText("Tài khoản");

        menuChangePassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/Unlock.png"))); // NOI18N
        menuChangePassword.setText("Đổi mật khẩu");
        jMenu1.add(menuChangePassword);

        menuSignOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/Lock.png"))); // NOI18N
        menuSignOut.setText("Đăng xuất");
        menuSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSignOutActionPerformed(evt);
            }
        });
        jMenu1.add(menuSignOut);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Quản lí");

        menuStaff.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/staff.png"))); // NOI18N
        menuStaff.setText("Quản lí nhân viên");
        jMenu2.add(menuStaff);

        menuDoctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/doctor.png"))); // NOI18N
        menuDoctor.setText("Quản lí bác sĩ");
        jMenu2.add(menuDoctor);

        menuPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/Users.png"))); // NOI18N
        menuPatient.setText("Quản lí bệnh nhân");
        jMenu2.add(menuPatient);

        menuMedicine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com.clinicmanage_icon/medicine.png"))); // NOI18N
        menuMedicine.setText("Quản lí thuốc");
        jMenu2.add(menuMedicine);

        jMenuBar1.add(jMenu2);

        menuStatitic.setText("Thống kê");
        jMenuBar1.add(menuStatitic);

        menuHelp.setText("Trợ giúp");
        jMenuBar1.add(menuHelp);

        menuExit.setText("Thoát");
        jMenuBar1.add(menuExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMainSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(panelMainSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNVActionPerformed

    private void btn_AddNew_PointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddNew_PointmentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_AddNew_PointmentActionPerformed

    private void btn_List_PatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_List_PatientsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_List_PatientsActionPerformed

    private void menuSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSignOutActionPerformed
        Auth.user = null;
        this.dispose();
        DangNhap dangNhap = new DangNhap();
        dangNhap.setVisible(true);
        dangNhap.show();
    }//GEN-LAST:event_menuSignOutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddNew_Pointment;
    private javax.swing.JButton btn_List_Doctor;
    private javax.swing.JButton btn_List_Medicine;
    private javax.swing.JButton btn_List_Patients;
    private javax.swing.JButton btn_List_Staff;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField edtUserName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem menuChangePassword;
    private javax.swing.JMenuItem menuDoctor;
    private javax.swing.JMenu menuExit;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuMedicine;
    private javax.swing.JMenuItem menuPatient;
    private javax.swing.JMenuItem menuSignOut;
    private javax.swing.JMenuItem menuStaff;
    private javax.swing.JMenu menuStatitic;
    private javax.swing.JPanel panelMainSpace;
    private javax.swing.JRadioButton rbBS;
    private javax.swing.JRadioButton rbGĐ;
    private javax.swing.JRadioButton rbNV;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(btn_List_Staff)) {
            if (Auth.isDoctor() || Auth.isStaff()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new NhanVien();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }
        if (e.getSource().equals(btn_List_Doctor)) {
            if (Auth.isDoctor()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new BacSi();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }
        if (e.getSource().equals(btn_List_Patients)) {
            if (Auth.isDoctor()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new BenhNhan();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }
        if (e.getSource().equals(btn_List_Medicine)) {
            if (Auth.isDoctor()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new Thuoc();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }
        if (e.getSource().equals(btn_AddNew_Pointment)) {
            chilPanel = new Pay();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }

        if (e.getSource().equals(menuChangePassword)) {
            chilPanel = new DoiMatKhau();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }
        if (e.getSource().equals(menuSignOut)) {
//            chilPanel = new ToaThuoc();
            panelMainSpace.removeAll();
//            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
//            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
//            panelMainSpace.repaint();
        }
        if (e.getSource().equals(menuStaff)) {
            if (Auth.isDoctor() || Auth.isStaff()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new NhanVien();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }

        if (e.getSource().equals(menuDoctor)) {
            chilPanel = new BacSi();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }
        if (e.getSource().equals(menuPatient)) {
            if (Auth.isDoctor()) {
                JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập trang này!");
            } else {
                chilPanel = new BenhNhan();
                panelMainSpace.removeAll();
                panelMainSpace.add(chilPanel, BorderLayout.CENTER);
                panelMainSpace.revalidate(); // Revalidate the panel to update its layout
                panelMainSpace.repaint();
            }
        }

        if (e.getSource().equals(menuMedicine)) {
            chilPanel = new ToaThuoc();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }
        if (e.getSource().equals(menuStatitic)) {
            chilPanel = new ThongKe();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }
        if (e.getSource().equals(menuHelp)) {
            chilPanel = new ThongKe();
            panelMainSpace.removeAll();
            panelMainSpace.add(chilPanel, BorderLayout.CENTER);
            panelMainSpace.revalidate(); // Revalidate the panel to update its layout
            panelMainSpace.repaint();
        }

        if (e.getSource().equals(menuExit)) {
            panelMainSpace.removeAll();
            this.panelMainSpace.setVisible(false);
        }

    }
}
